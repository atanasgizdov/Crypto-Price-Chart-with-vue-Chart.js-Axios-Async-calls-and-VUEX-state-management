{"remainingRequest":"/Users/agizdov/Development/Harvard/Vue/charts-api/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/agizdov/Development/Harvard/Vue/charts-api/src/components/Favorites.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/agizdov/Development/Harvard/Vue/charts-api/src/components/Favorites.vue","mtime":1576616782976},{"path":"/Users/agizdov/Development/Harvard/Vue/charts-api/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/agizdov/Development/Harvard/Vue/charts-api/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/agizdov/Development/Harvard/Vue/charts-api/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/agizdov/Development/Harvard/Vue/charts-api/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/agizdov/Development/Harvard/Vue/charts-api/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi5jb2luLCAuZm9ybV9fbGFiZWwgIHsKICBwYWRkaW5nLXJpZ2h0OiAxMHB4Cn0KCi5idXR0b24sIC5lcnJvciB7CiAgYm9yZGVyLXJhZGl1czogMTBweDsKICBtYXJnaW4tbGVmdDogMTBweDsKICBwYWRkaW5nOiAycHgKfQo="},{"version":3,"sources":["Favorites.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"Favorites.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\n<div id=\"app\">\n\n  <!-- Add and remove favorites -->\n\n  <h1>Favorites</h1>\n  <div v-for=\"(coin,n) in this.$store.state.favorite_coins\" :key='n'>\n    <p>\n    <span class=\"coin\">{{coin}}</span>\n    <router-link :to='coin' tag=\"button\" class = 'button'>See Asset</router-link>\n    <button @click=\"removeCoin(n)\" class = 'button'> Remove</button>\n    </p>\n  </div>\n\n  <p>\n    <select v-model=\"newCoin\">\n      <option disabled value=\"\">Please select</option>\n      <option v-for='(coin,n) in coins_library' v-bind:value='coin' :key = 'n'>\n        {{coin}}\n      </option>\n    </select>\n    <button @click=\"addCoin\" class = ' button' >Add to favorites</button>\n  </p>\n\n  <!-- Vuelidate form section -->\n\n  <br>\n\n  <h1> Vuelidate Form verification </h1>\n  <h5> Please enter your name below and click Submit </h5>\n\n  <form @submit.prevent=\"submit\">\n    <div class=\"form-group\" :class=\"{ 'form-group--error': $v.name.$error }\">\n      <label class=\"form__label\">Name:</label>\n      <input class=\"form__input\" v-model.trim=\"$v.name.$model\"/>\n    </div>\n    <div class=\"error\" v-if=\"!$v.name.required\">Name is required</div>\n    <div class=\"error\" v-if=\"!$v.name.minLength\">Name must have at least {{$v.name.$params.minLength.min}} letters.</div>\n    <button class=\"button\" type=\"submit\" :disabled=\"submitStatus === 'PENDING'\">Submit!</button>\n    <p class=\"typo__p\" v-if=\"submitStatus === 'OK'\">Thanks for your submission!</p>\n    <p class=\"typo__p\" v-if=\"submitStatus === 'ERROR'\">Please fill the form correctly.</p>\n    <p class=\"typo__p\" v-if=\"submitStatus === 'PENDING'\">Sending...</p>\n</form>\n\n\n</div>\n\n</template>\n\n<script>\n\nimport { required, minLength } from 'vuelidate/lib/validators'\n\nexport default {\n  name: 'favorites',\n  data() {\n    return {\n      //favorites data\n      //refactored to use VUEX state manager instead of local component date\n      //favorite_coins:[],\n      newCoin: null,\n      coins_library: ['etherium', 'litecoin', 'bitcoincash', 'bitcoin'],\n      //form data\n      name: '',\n      submitStatus: null\n      }\n  },\n\n  validations: {\n    name: {\n      required,\n      minLength: minLength(4)\n    }\n  },\n\n  mounted() {\n\n    if(localStorage.getItem('favorite_coins')) {\n      try {\n        //refactored to use VUEX state manager instead of local component date\n        //this.favorite_coins = JSON.parse(localStorage.getItem('favorite_coins'));\n        this.$store.commit('setFavoriteCoins', JSON.parse(localStorage.getItem('favorite_coins')));\n        console.log(this.$store.state.favorite_coins)\n      } catch(e) {\n        localStorage.removeItem('favorite_coins');\n        //console.log(this.$store.state.favorite_coins)\n      }\n    }\n  },\n\n  methods: {\n    //favorites methods\n    addCoin() {\n      // ensure they actually typed something\n      if(!this.newCoin) return;\n      //refactored to use VUEX state manager instead of local component date\n      this.$store.commit('addCoin', this.newCoin)\n      //this.favorite_coins.push(this.newCoin);\n      this.newCoin = '';\n      this.saveCoin();\n      console.log(this.$store.state.favorite_coins)\n    },\n    removeCoin(x) {\n      //refactored to use VUEX state manager instead of local component date\n      this.$store.commit('removeCoin', x)\n      //this.favorite_coins.splice(x,1);\n      this.saveCoin();\n    },\n    saveCoin() {\n      //refactored to use VUEX state manager instead of local component date\n      let parsed = JSON.stringify(this.$store.state.favorite_coins)\n      //let parsed = JSON.stringify(this.favorite_coins);\n      localStorage.setItem('favorite_coins', parsed);\n    },\n    //form validation methods\n    submit() {\n\n      this.$v.$touch()\n      if (this.$v.$invalid) {\n        this.submitStatus = 'ERROR'\n      } else {\n        // do your submit logic here\n        this.submitStatus = 'PENDING'\n        setTimeout(() => {\n          this.submitStatus = 'OK'\n        }, 1000)\n      }\n    }\n  }\n\n}\n\n</script>\n\n<style>\n.coin, .form__label  {\n  padding-right: 10px\n}\n\n.button, .error {\n  border-radius: 10px;\n  margin-left: 10px;\n  padding: 2px\n}\n</style>\n"]}]}